// Generated code from Butter Knife. Do not modify!
package com.hxjf.dubei.ui.activity;

import android.support.annotation.CallSuper;
import android.support.annotation.UiThread;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import butterknife.Unbinder;
import butterknife.internal.DebouncingOnClickListener;
import butterknife.internal.Utils;
import com.hxjf.dubei.R;
import com.itheima.pulltorefreshlib.PullToRefreshListView;
import com.zhy.view.flowlayout.TagFlowLayout;
import java.lang.IllegalStateException;
import java.lang.Override;

public class SearchCollectBookActivity_ViewBinding implements Unbinder {
  private SearchCollectBookActivity target;

  private View view2131755544;

  private View view2131755546;

  @UiThread
  public SearchCollectBookActivity_ViewBinding(SearchCollectBookActivity target) {
    this(target, target.getWindow().getDecorView());
  }

  @UiThread
  public SearchCollectBookActivity_ViewBinding(final SearchCollectBookActivity target,
      View source) {
    this.target = target;

    View view;
    view = Utils.findRequiredView(source, R.id.search_collect_book_search, "field 'searchCollectBookSearch' and method 'onClick'");
    target.searchCollectBookSearch = Utils.castView(view, R.id.search_collect_book_search, "field 'searchCollectBookSearch'", ImageView.class);
    view2131755544 = view;
    view.setOnClickListener(new DebouncingOnClickListener() {
      @Override
      public void doClick(View p0) {
        target.onClick(p0);
      }
    });
    target.searchCollectBookBookname = Utils.findRequiredViewAsType(source, R.id.search_collect_book_bookname, "field 'searchCollectBookBookname'", EditText.class);
    view = Utils.findRequiredView(source, R.id.search_collect_book_cancel, "field 'searchCollectBookCancel' and method 'onClick'");
    target.searchCollectBookCancel = Utils.castView(view, R.id.search_collect_book_cancel, "field 'searchCollectBookCancel'", TextView.class);
    view2131755546 = view;
    view.setOnClickListener(new DebouncingOnClickListener() {
      @Override
      public void doClick(View p0) {
        target.onClick(p0);
      }
    });
    target.searchCollectBookList = Utils.findRequiredViewAsType(source, R.id.search_collect_book_list, "field 'searchCollectBookList'", PullToRefreshListView.class);
    target.searchCollectBookTagflLately = Utils.findRequiredViewAsType(source, R.id.search_collect_book_tagfl_lately, "field 'searchCollectBookTagflLately'", TagFlowLayout.class);
    target.searchCollectBookLlLatelySearch = Utils.findRequiredViewAsType(source, R.id.search_collect_book_ll_lately_search, "field 'searchCollectBookLlLatelySearch'", LinearLayout.class);
    target.searchCollectBookTagflHot = Utils.findRequiredViewAsType(source, R.id.search_collect_book_tagfl_hot, "field 'searchCollectBookTagflHot'", TagFlowLayout.class);
    target.searchCollectBookLlHotSearch = Utils.findRequiredViewAsType(source, R.id.search_collect_book_ll_hot_search, "field 'searchCollectBookLlHotSearch'", LinearLayout.class);
    target.searchCollectBookEmptyBook = Utils.findRequiredViewAsType(source, R.id.search_collect_book_empty_book, "field 'searchCollectBookEmptyBook'", TextView.class);
  }

  @Override
  @CallSuper
  public void unbind() {
    SearchCollectBookActivity target = this.target;
    if (target == null) throw new IllegalStateException("Bindings already cleared.");
    this.target = null;

    target.searchCollectBookSearch = null;
    target.searchCollectBookBookname = null;
    target.searchCollectBookCancel = null;
    target.searchCollectBookList = null;
    target.searchCollectBookTagflLately = null;
    target.searchCollectBookLlLatelySearch = null;
    target.searchCollectBookTagflHot = null;
    target.searchCollectBookLlHotSearch = null;
    target.searchCollectBookEmptyBook = null;

    view2131755544.setOnClickListener(null);
    view2131755544 = null;
    view2131755546.setOnClickListener(null);
    view2131755546 = null;
  }
}
